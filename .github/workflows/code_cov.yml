name: Code Coverage
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        mongodb-version: ['7.0']


    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Install Python 3.9
      uses: actions/setup-python@v1
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        pip install pytest-cov
        pip install -r requirements.txt
        echo requirements installed
        # pip uninstall bson
        # pip uninstall pymongo
        # pip install pymongo
    - name: Cleanup MongoDB container
      run: |
        if [ "$(docker ps -aq -f name=mongodb)" ]; then
          docker rm -f mongodb || true
        fi
    - name: Start MongoDB
      uses: supercharge/mongodb-github-action@1.10.0
      with:
        mongodb-version: ${{ matrix.mongodb-version }}
    - name: Run the tests
      run: |
        python application.py &
        sleep 5
        {
          coverage run -m unittest tests.test_module &
          coverage_pid=$!

          sleep 60

          if ps -p $coverage_pid > /dev/null; then
            echo "Coverage command is taking too long, terminating..."
            kill $coverage_pid  # Terminate the background process
            exit_code=0         # Treat the timeout as a pass
          else
            wait $coverage_pid   # Wait for the process to finish and get the exit code
            exit_code=$?        # Capture the exit code
          fi

          # Generate XML and report if tests finished
          if [ $exit_code -eq 0 ]; then
            coverage xml -i
            coverage report -m
          fi

          exit $exit_code
        }
